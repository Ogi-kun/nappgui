/* Gui rendering context */
module nappgui.draw2d.guictx;

import nappgui.core.arrst;
import nappgui.core.core;
import nappgui.draw2d.draw2d;
import nappgui.sewer.types;

public import nappgui.draw2d.guictx_types;

GuiCtx *guictx_create();

GuiCtx *guictx_retain(const GuiCtx *context);

void guictx_destroy(GuiCtx **context);

void guictx_release(GuiCtx **context);

const(GuiCtx) *guictx_get_current();

void guictx_set_current(const GuiCtx *context);

void guictx_append_label_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_label_create,
        FPtr_gctx_destroy func_label_destroy,
        FPtr_gctx_set_listener func_label_OnClick,
        FPtr_gctx_set_listener func_label_OnMouseEnter,
        FPtr_gctx_set_listener func_label_OnMouseExit,
        FPtr_gctx_set_text func_label_set_text,
        FPtr_gctx_set_cptr func_label_set_font,
        FPtr_gctx_set_enum func_label_set_align,
        FPtr_gctx_set_enum func_label_set_ellipsis,
        FPtr_gctx_set_uint32 func_label_set_text_color,
        FPtr_gctx_set_uint32 func_label_set_bg_color,
        FPtr_gctx_bounds1 func_label_bounds,
        FPtr_gctx_set_ptr func_attach_label_to_panel,
        FPtr_gctx_set_ptr func_detach_label_from_panel,
        FPtr_gctx_set_bool func_label_set_visible,
        FPtr_gctx_set_bool func_label_set_enabled,
        FPtr_gctx_get2_real32 func_label_get_size,
        FPtr_gctx_get2_real32 func_label_get_origin,
        FPtr_gctx_set4_real32 func_label_set_frame);

void guictx_append_label_manager(Label, Panel, Font)(
        GuiCtx *context,
        Label* function(uint32_t) func_label_create,
        void function(void **Label) func_label_destroy,
        void function(Label *item, Listener *listener) func_label_OnClick,
        void function(Label *item, Listener *listener) func_label_OnMouseEnter,
        void function(Label *item, Listener *listener) func_label_OnMouseExit,
        void function(Label *item, const char_t *text) func_label_set_text,
        void function(Label *item, const Font *ptr) func_label_set_font,
        void function(Label *item, align_t value) func_label_set_align,
        void function(Label *item, ellipsis_t value) func_label_set_ellipsis,
        void function(Label *item, uint32_t value) func_label_set_text_color,
        void function(Label *item, uint32_t value) func_label_set_bg_color,
        void function(Label *item, const char_t *text, 
                real32_t refwidth, real32_t *width, real32_t *height) func_label_bounds,
        uint32_t function(Label *item, Panel *ptr) func_attach_label_to_panel,
        uint32_t function(Label *item, Panel *ptr) func_detach_label_from_panel,
        void function(Label *item, bool_t value) func_label_set_visible,
        void function(Label *item, bool_t value) func_label_set_enabled,
        void function(const Label *item, real32_t *value1, real32_t *value2) func_label_get_size,
        void function(const Label *item, real32_t *value1, real32_t *value2) func_label_get_origin,
        void function(Label *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_label_set_frame) 
{
    guictx_append_label_manager_imp(
            context,
            cast(FPtr_gctx_create)func_label_create,
            cast(FPtr_gctx_destroy)func_label_destroy,
            cast(FPtr_gctx_set_listener)func_label_OnClick,
            cast(FPtr_gctx_set_listener)func_label_OnMouseEnter,
            cast(FPtr_gctx_set_listener)func_label_OnMouseExit,
            cast(FPtr_gctx_set_text)func_label_set_text,
            cast(FPtr_gctx_set_cptr)func_label_set_font,
            cast(FPtr_gctx_set_enum)func_label_set_align,
            cast(FPtr_gctx_set_enum)func_label_set_ellipsis,
            cast(FPtr_gctx_set_uint32)func_label_set_text_color,
            cast(FPtr_gctx_set_uint32)func_label_set_bg_color,
            cast(FPtr_gctx_bounds1)func_label_bounds,
            cast(FPtr_gctx_set_ptr)func_attach_label_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_label_from_panel,
            cast(FPtr_gctx_set_bool)func_label_set_visible,
            cast(FPtr_gctx_set_bool)func_label_set_enabled,
            cast(FPtr_gctx_get2_real32)func_label_get_size,
            cast(FPtr_gctx_get2_real32)func_label_get_origin,
            cast(FPtr_gctx_set4_real32)func_label_set_frame,
    );
}


void guictx_append_button_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_button_create,
        FPtr_gctx_destroy func_button_destroy,
        FPtr_gctx_set_listener func_button_OnClick,
        FPtr_gctx_set_text func_button_set_text,
        FPtr_gctx_set_text func_button_set_tooltip,
        FPtr_gctx_set_cptr func_button_set_font,
        FPtr_gctx_set_enum func_button_set_align,
        FPtr_gctx_set_cptr func_button_set_image,
        FPtr_gctx_set_enum func_button_set_state,
        FPtr_gctx_get_enum func_button_get_state,
        FPtr_gctx_bounds2 func_button_bounds,
        FPtr_gctx_set_ptr func_attach_button_to_panel,
        FPtr_gctx_set_ptr func_detach_button_from_panel,
        FPtr_gctx_set_bool func_button_set_visible,
        FPtr_gctx_set_bool func_button_set_enabled,
        FPtr_gctx_get2_real32 func_button_get_size,
        FPtr_gctx_get2_real32 func_button_get_origin,
        FPtr_gctx_set4_real32 func_button_set_frame);

void guictx_append_button_manager(Button, Panel, Image, Font)(
        GuiCtx * context,
        Button* function(uint32_t flags) func_button_create,
        void function(Button **item) func_button_destroy,
        void function(Button *item, Listener *listener) func_button_OnClick,
        void function(Button *item, const char_t *text) func_button_set_text,
        void function(Button *item, const char_t *text) func_button_set_tooltip,
        void function(Button *item, const Font *ptr) func_button_set_font,
        void function(Button *item, align_t value) func_button_set_align,
        void function(Button *item, const Image *ptr) func_button_set_image,
        void function(Button *item, gui_state_t value) func_button_set_state,
        gui_state_t function(const Button *item) func_button_get_state,
        void function(const Button *item, const char_t *text, real32_t refwidth, real32_t refheight, 
                real32_t *width, real32_t *height) func_button_bounds,
        void function(Button *item, Panel *ptr) func_attach_button_to_panel,
        void function(Button *item, Panel *ptr) func_detach_button_from_panel,
        void function(Button *item, bool_t value) func_button_set_visible,
        void function(Button *item, bool_t value) func_button_set_enabled,
        void function(const Button *item, real32_t *value1, real32_t *value2) func_button_get_size,
        void function(const Button *item, real32_t *value1, real32_t *value2) func_button_get_origin,
        void function(Button *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_button_set_frame)
{
    guictx_append_button_manager_imp(
            context,
            cast(FPtr_gctx_create)func_button_create,
            cast(FPtr_gctx_destroy)func_button_destroy,
            cast(FPtr_gctx_set_listener)func_button_OnClick,
            cast(FPtr_gctx_set_text)func_button_set_text,
            cast(FPtr_gctx_set_text)func_button_set_tooltip,
            cast(FPtr_gctx_set_cptr)func_button_set_font,
            cast(FPtr_gctx_set_enum)func_button_set_align,
            cast(FPtr_gctx_set_cptr)func_button_set_image,
            cast(FPtr_gctx_set_enum)func_button_set_state,
            cast(FPtr_gctx_get_enum)func_button_get_state,
            cast(FPtr_gctx_bounds2)func_button_bounds,
            cast(FPtr_gctx_set_ptr)func_attach_button_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_button_from_panel,
            cast(FPtr_gctx_set_bool)func_button_set_visible,
            cast(FPtr_gctx_set_bool)func_button_set_enabled,
            cast(FPtr_gctx_get2_real32)func_button_get_size,
            cast(FPtr_gctx_get2_real32)func_button_get_origin,
            cast(FPtr_gctx_set4_real32)func_button_set_frame
    );
}

void guictx_append_popup_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_popup_create,
        FPtr_gctx_destroy func_popup_destroy,
        FPtr_gctx_set_listener func_popup_OnChange,
        FPtr_gctx_set_elem func_popup_set_elem,
        FPtr_gctx_set_text func_popup_set_tooltip,
        FPtr_gctx_set_cptr func_popup_set_font,
        FPtr_gctx_set_uint32 func_popup_list_height,
        FPtr_gctx_set_uint32 func_popup_set_selected,
        FPtr_gctx_get_uint32 func_popup_get_selected,
        FPtr_gctx_bounds3 func_popup_bounds,
        FPtr_gctx_set_ptr func_attach_popup_to_panel,
        FPtr_gctx_set_ptr func_detach_popup_from_panel,
        FPtr_gctx_set_bool func_popup_set_visible,
        FPtr_gctx_set_bool func_popup_set_enabled,
        FPtr_gctx_get2_real32 func_popup_get_size,
        FPtr_gctx_get2_real32 func_popup_get_origin,
        FPtr_gctx_set4_real32 func_popup_set_frame);

void guictx_append_popup_manager(Popup, Panel, Image, Font)(
        GuiCtx * context,
        Popup* function(uint32_t flags) func_popup_create,
        void function(Popup **item) func_popup_destroy,
        void function(Popup *item, Listener *listener) func_popup_OnChange,
        void function(Popup *item, ctrl_op_t op, uint32_t index, 
                const char_t *text, const Image *data) func_popup_set_elem,
        void function(Popup *item, const char_t *text) func_popup_set_tooltip,
        void function(Popup *item, const Font *ptr) func_popup_set_font,
        void function(Popup *item, real32_t value) func_popup_list_height,
        void function(Popup *item, real32_t value) func_popup_set_selected,
        uint32_t function(const Popup *item) func_popup_get_selected,
        void function(const Popup *item, const char_t *text, 
                real32_t *width, real32_t *height) func_popup_bounds,
        void function(Popup *item, Panel *ptr) func_attach_popup_to_panel,
        void function(Popup *item, Panel *ptr) func_detach_popup_from_panel,
        void function(Popup *item, bool_t value) func_popup_set_visible,
        void function(Popup *item, bool_t value) func_popup_set_enabled,
        void function(const Popup *item, real32_t *value1, real32_t *value2) func_popup_get_size,
        void function(const Popup *item, real32_t *value1, real32_t *value2) func_popup_get_origin,
        void function(Popup *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_popup_set_frame)
{
    guictx_append_popup_manager_imp(
            context,
            cast(FPtr_gctx_create)func_popup_create,
            cast(FPtr_gctx_destroy)func_popup_destroy,
            cast(FPtr_gctx_set_listener)func_popup_OnChange,
            cast(FPtr_gctx_set_elem)func_popup_set_elem,
            cast(FPtr_gctx_set_text)func_popup_set_tooltip,
            cast(FPtr_gctx_set_cptr)func_popup_set_font,
            cast(FPtr_gctx_set_uint32)func_popup_list_height,
            cast(FPtr_gctx_set_uint32)func_popup_set_selected,
            cast(FPtr_gctx_get_uint32)func_popup_get_selected,
            cast(FPtr_gctx_bounds3)func_popup_bounds,
            cast(FPtr_gctx_set_ptr)func_attach_popup_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_popup_from_panel,
            cast(FPtr_gctx_set_bool)func_popup_set_visible,
            cast(FPtr_gctx_set_bool)func_popup_set_enabled,
            cast(FPtr_gctx_get2_real32)func_popup_get_size,
            cast(FPtr_gctx_get2_real32)func_popup_get_origin,
            cast(FPtr_gctx_set4_real32)func_popup_set_frame);
}


void guictx_append_edit_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_edit_create,
        FPtr_gctx_destroy func_edit_destroy,
        FPtr_gctx_set_listener func_edit_OnFilter,
        FPtr_gctx_set_listener func_edit_OnChange,
        FPtr_gctx_set_listener func_edit_OnFocus,
        FPtr_gctx_set_text func_edit_set_text,
        FPtr_gctx_set_text func_edit_set_tooltip,
        FPtr_gctx_set_cptr func_edit_set_font,
        FPtr_gctx_set_enum func_edit_set_align,
        FPtr_gctx_set_bool func_edit_set_passmode,
        FPtr_gctx_set_bool func_edit_set_editable,
        FPtr_gctx_set_bool func_edit_set_autoselect,
        FPtr_gctx_set_uint32 func_edit_set_text_color,
        FPtr_gctx_set_uint32 func_edit_set_bg_color,
        FPtr_gctx_bounds4 func_edit_bounds,
        FPtr_gctx_set_ptr func_attach_edit_to_panel,
        FPtr_gctx_set_ptr func_detach_edit_from_panel,
        FPtr_gctx_set_bool func_edit_set_visible,
        FPtr_gctx_set_bool func_edit_set_enabled,
        FPtr_gctx_get2_real32 func_edit_get_size,
        FPtr_gctx_get2_real32 func_edit_get_origin,
        FPtr_gctx_set4_real32 func_edit_set_frame);

void guictx_append_edit_manager(Edit, Panel, Font)(
        GuiCtx * context,
        Edit* function(uint32_t flags) func_edit_create,
        void function(Edit **item) func_edit_destroy,
        void function(Edit *item, Listener *listener) func_edit_OnFilter,
        void function(Edit *item, Listener *listener) func_edit_OnChange,
        void function(Edit *item, Listener *listener) func_edit_OnFocus,
        void function(Edit *item, const char_t *text) func_edit_set_text,
        void function(Edit *item, const char_t *text) func_edit_set_tooltip,
        void function(Edit *item, const Font *ptr) func_edit_set_font,
        void function(Edit *item, align_t value) func_edit_set_align,
        void function(Edit *item, bool_t value) func_edit_set_passmode,
        void function(Edit *item, bool_t value) func_edit_set_editable,
        void function(Edit *item, bool_t value) func_edit_set_autoselect,
        void function(Edit *item, real32_t value) func_edit_set_text_color,
        void function(Edit *item, real32_t value) func_edit_set_bg_color,
        void function(const Edit *item, real32_t refwidth, 
                uint32_t lines, real32_t *width, real32_t *height) func_edit_bounds,
        void function(Edit *item, Panel *ptr) func_attach_edit_to_panel,
        void function(Edit *item, Panel *ptr) func_detach_edit_from_panel,
        void function(Edit *item, bool_t value) func_edit_set_visible,
        void function(Edit *item, bool_t value) func_edit_set_enabled,
        void function(const Edit *item, real32_t *value1, real32_t *value2) func_edit_get_size,
        void function(const Edit *item, real32_t *value1, real32_t *value2) func_edit_get_origin,
        void function(Edit *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_edit_set_frame)
{   
    guictx_append_edit_manager_imp(
            context,
            cast(FPtr_gctx_create)func_edit_create,
            cast(FPtr_gctx_destroy)func_edit_destroy,
            cast(FPtr_gctx_set_listener)func_edit_OnFilter,
            cast(FPtr_gctx_set_listener)func_edit_OnChange,
            cast(FPtr_gctx_set_listener)func_edit_OnFocus,
            cast(FPtr_gctx_set_text)func_edit_set_text,
            cast(FPtr_gctx_set_text)func_edit_set_tooltip,
            cast(FPtr_gctx_set_cptr)func_edit_set_font,
            cast(FPtr_gctx_set_enum)func_edit_set_align,
            cast(FPtr_gctx_set_bool)func_edit_set_passmode,
            cast(FPtr_gctx_set_bool)func_edit_set_editable,
            cast(FPtr_gctx_set_bool)func_edit_set_autoselect,
            cast(FPtr_gctx_set_uint32)func_edit_set_text_color,
            cast(FPtr_gctx_set_uint32)func_edit_set_bg_color,
            cast(FPtr_gctx_bounds4)func_edit_bounds,
            cast(FPtr_gctx_set_ptr)func_attach_edit_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_edit_from_panel,
            cast(FPtr_gctx_set_bool)func_edit_set_visible,
            cast(FPtr_gctx_set_bool)func_edit_set_enabled,
            cast(FPtr_gctx_get2_real32)func_edit_get_size,
            cast(FPtr_gctx_get2_real32)func_edit_get_origin,
            cast(FPtr_gctx_set4_real32)func_edit_set_frame);
}

void guictx_append_combo_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_combo_create,
        FPtr_gctx_destroy func_combo_destroy,
        FPtr_gctx_set_listener func_combo_OnFilter,
        FPtr_gctx_set_listener func_combo_OnChange,
        FPtr_gctx_set_listener func_combo_OnFocus,
        FPtr_gctx_set_listener func_combo_OnSelect,
        FPtr_gctx_set_text func_combo_set_text,
        FPtr_gctx_set_text func_combo_set_tooltip,
        FPtr_gctx_set_cptr func_combo_set_font,
        FPtr_gctx_set_enum func_combo_set_align,
        FPtr_gctx_set_bool func_combo_set_passmode,
        FPtr_gctx_set_uint32 func_combo_set_text_color,
        FPtr_gctx_set_uint32 func_combo_set_bg_color,
        FPtr_gctx_set_elem func_combo_set_elem,
        FPtr_gctx_set_uint32 func_combo_set_selected,
        FPtr_gctx_get_uint32 func_combo_get_selected,
        FPtr_gctx_bounds5 func_combo_bounds,
        FPtr_gctx_set_ptr func_attach_combo_to_panel,
        FPtr_gctx_set_ptr func_detach_combo_from_panel,
        FPtr_gctx_set_bool func_combo_set_visible,
        FPtr_gctx_set_bool func_combo_set_enabled,
        FPtr_gctx_get2_real32 func_combo_get_size,
        FPtr_gctx_get2_real32 func_combo_get_origin,
        FPtr_gctx_set4_real32 func_combo_set_frame);

void guictx_append_combo_manager(Combo, Panel, Image, Font)(
        GuiCtx *context,
        Combo* function(uint32_t flags) func_combo_create,
        void function(Combo **item) func_combo_destroy,
        void function(Combo *item, Listener *listener) func_combo_OnFilter,
        void function(Combo *item, Listener *listener) func_combo_OnChange,
        void function(Combo *item, Listener *listener) func_combo_OnFocus,
        void function(Combo *item, Listener *listener) func_combo_OnSelect,
        void function(Combo *item, const char_t *text) func_combo_set_text,
        void function(Combo *item, const char_t *text) func_combo_set_tooltip,
        void function(Combo *item, const Font *ptr) func_combo_set_font,
        void function(Combo *item, align_t value) func_combo_set_align,
        void function(Combo *item, bool_t value) func_combo_set_passmode,
        void function(Combo *item, real32_t value) func_combo_set_text_color,
        void function(Combo *item, real32_t value) func_combo_set_bg_color,
        void function(Combo *item, ctrl_op_t op, uint32_t index, 
                const char_t *text, const Image *data) func_combo_set_elem,
        void function(Combo *item, real32_t value) func_combo_set_selected,
        uint32_t function(const Combo *item) func_combo_get_selected,
        void function(const Combo *item, real32_t refwidth, 
                real32_t *width, real32_t *height) func_combo_bounds,
        void function(Combo *item, Panel *ptr) func_attach_combo_to_panel,
        void function(Combo *item, Panel *ptr) func_detach_combo_from_panel,
        void function(Combo *item, bool_t value) func_combo_set_visible,
        void function(Combo *item, bool_t value) func_combo_set_enabled,
        void function(const Combo *item, real32_t *value1, real32_t *value2) func_combo_get_size,
        void function(const Combo *item, real32_t *value1, real32_t *value2) func_combo_get_origin,
        void function(Combo *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_combo_set_frame)
{
    guictx_append_combo_manager_imp(
            context,
            cast(FPtr_gctx_create)func_combo_create,
            cast(FPtr_gctx_destroy)func_combo_destroy,
            cast(FPtr_gctx_set_listener)func_combo_OnFilter,
            cast(FPtr_gctx_set_listener)func_combo_OnChange,
            cast(FPtr_gctx_set_listener)func_combo_OnFocus,
            cast(FPtr_gctx_set_listener)func_combo_OnSelect,
            cast(FPtr_gctx_set_text)func_combo_set_text,
            cast(FPtr_gctx_set_text)func_combo_set_tooltip,
            cast(FPtr_gctx_set_cptr)func_combo_set_font,
            cast(FPtr_gctx_set_enum)func_combo_set_align,
            cast(FPtr_gctx_set_bool)func_combo_set_passmode,
            cast(FPtr_gctx_set_uint32)func_combo_set_text_color,
            cast(FPtr_gctx_set_uint32)func_combo_set_bg_color,
            cast(FPtr_gctx_set_elem)func_combo_set_elem,
            cast(FPtr_gctx_set_uint32)func_combo_set_selected,
            cast(FPtr_gctx_get_uint32)func_combo_get_selected,
            cast(FPtr_gctx_bounds5)func_combo_bounds,
            cast(FPtr_gctx_set_ptr)func_attach_combo_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_combo_from_panel,
            cast(FPtr_gctx_set_bool)func_combo_set_visible,
            cast(FPtr_gctx_set_bool)func_combo_set_enabled,
            cast(FPtr_gctx_get2_real32)func_combo_get_size,
            cast(FPtr_gctx_get2_real32)func_combo_get_origin,
            cast(FPtr_gctx_set4_real32)func_combo_set_frame);
}

void guictx_append_updown_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_updown_create,
        FPtr_gctx_destroy func_updown_destroy,
        FPtr_gctx_set_listener func_updown_OnClick,
        FPtr_gctx_set_text func_updown_set_tooltip,
        FPtr_gctx_set_ptr func_attach_updown_to_panel,
        FPtr_gctx_set_ptr func_detach_updown_from_panel,
        FPtr_gctx_set_bool func_updown_set_visible,
        FPtr_gctx_set_bool func_updown_set_enabled,
        FPtr_gctx_get2_real32 func_updown_get_size,
        FPtr_gctx_get2_real32 func_updown_get_origin,
        FPtr_gctx_set4_real32 func_updown_set_frame);

void guictx_append_updown_manager(Updown, Panel)(
        GuiCtx *context,
        Updown* function(uint32_t flags) func_updown_create,
        void function(Updown **item) func_updown_destroy,
        void function(Updown *item, Listener *listener) func_updown_OnClick,
        void function(Updown *item, const char_t *text) func_updown_set_tooltip,
        void function(Updown *item, Panel *ptr) func_attach_updown_to_panel,
        void function(Updown *item, Panel *ptr) func_detach_updown_from_panel,
        void function(Updown *item, bool_t value) func_updown_set_visible,
        void function(Updown *item, bool_t value) func_updown_set_enabled,
        void function(const Updown *item, real32_t *value1, real32_t *value2) func_updown_get_size,
        void function(const Updown *item, real32_t *value1, real32_t *value2) func_updown_get_origin,
        void function(Updown *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_updown_set_frame)
{   
    guictx_append_updown_manager_imp(
            context,
            cast(FPtr_gctx_create)func_updown_create,
            cast(FPtr_gctx_destroy)func_updown_destroy,
            cast(FPtr_gctx_set_listener)func_updown_OnClick,
            cast(FPtr_gctx_set_text)func_updown_set_tooltip,
            cast(FPtr_gctx_set_ptr)func_attach_updown_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_updown_from_panel,
            cast(FPtr_gctx_set_bool)func_updown_set_visible,
            cast(FPtr_gctx_set_bool)func_updown_set_enabled,
            cast(FPtr_gctx_get2_real32)func_updown_get_size,
            cast(FPtr_gctx_get2_real32)func_updown_get_origin,
            cast(FPtr_gctx_set4_real32)func_updown_set_frame);
}

void guictx_append_slider_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_slider_create,
        FPtr_gctx_destroy func_slider_destroy,
        FPtr_gctx_set_listener func_slider_OnMoved,
        FPtr_gctx_set_text func_slider_set_tooltip,
        FPtr_gctx_tickmarks func_slider_set_tickmarks,
        FPtr_gctx_get_real32 func_slider_get_position,
        FPtr_gctx_set_real32 func_slider_set_position,
        FPtr_gctx_bounds6 func_slider_bounds,
        FPtr_gctx_set_ptr func_attach_slider_to_panel,
        FPtr_gctx_set_ptr func_detach_slider_from_panel,
        FPtr_gctx_set_bool func_slider_set_visible,
        FPtr_gctx_set_bool func_slider_set_enabled,
        FPtr_gctx_get2_real32 func_slider_get_size,
        FPtr_gctx_get2_real32 func_slider_get_origin,
        FPtr_gctx_set4_real32 func_slider_set_frame);

void guictx_append_slider_manager(Slider, Panel)(
        GuiCtx *context,
        Slider* function(uint32_t flags) func_slider_create,
        void function(Slider **item) func_slider_destroy,
        void function(Slider *item, Listener *listener) func_slider_OnMoved,
        void function(Slider *item, const char_t *text) func_slider_set_tooltip,
        void function(void *Slider, uint32_t num_tickmarks, bool_t tickmarks_at_left_top) func_slider_set_tickmarks,
        real32_t function(const Slider *item) func_slider_get_position,
        void function(Slider *item, real32_t value) func_slider_set_position,
        void function(const Slider *item, real32_t length, 
                gui_size_t size, real32_t *width, real32_t *height) func_slider_bounds,
        void function(Slider *item, Panel *ptr) func_attach_slider_to_panel,
        void function(Slider *item, Panel *ptr) func_detach_slider_from_panel,
        void function(Slider *item, bool_t value) func_slider_set_visible,
        void function(Slider *item, bool_t value) func_slider_set_enabled,
        void function(const Slider *item, real32_t *value1, real32_t *value2) func_slider_get_size,
        void function(const Slider *item, real32_t *value1, real32_t *value2) func_slider_get_origin,
        void function(Slider *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_slider_set_frame)
{
    guictx_append_slider_manager_imp(
            context,
            cast(FPtr_gctx_create)func_slider_create,
            cast(FPtr_gctx_destroy)func_slider_destroy,
            cast(FPtr_gctx_set_listener)func_slider_OnMoved,
            cast(FPtr_gctx_set_text)func_slider_set_tooltip,
            cast(FPtr_gctx_tickmarks)func_slider_set_tickmarks,
            cast(FPtr_gctx_get_real32)func_slider_get_position,
            cast(FPtr_gctx_set_real32)func_slider_set_position,
            cast(FPtr_gctx_bounds6)func_slider_bounds,
            cast(FPtr_gctx_set_ptr)func_attach_slider_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_slider_from_panel,
            cast(FPtr_gctx_set_bool)func_slider_set_visible,
            cast(FPtr_gctx_set_bool)func_slider_set_enabled,
            cast(FPtr_gctx_get2_real32)func_slider_get_size,
            cast(FPtr_gctx_get2_real32)func_slider_get_origin,
            cast(FPtr_gctx_set4_real32)func_slider_set_frame);
}

void guictx_append_progress_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_progress_create,
        FPtr_gctx_destroy func_progress_destroy,
        FPtr_gctx_set_real32 func_progress_set_position,
        FPtr_gctx_get_real32e func_progress_get_thickness,
        FPtr_gctx_set_ptr func_attach_progress_to_panel,
        FPtr_gctx_set_ptr func_detach_progress_from_panel,
        FPtr_gctx_set_bool func_progress_set_visible,
        FPtr_gctx_set_bool func_progress_set_enabled,
        FPtr_gctx_get2_real32 func_progress_get_size,
        FPtr_gctx_get2_real32 func_progress_get_origin,
        FPtr_gctx_set4_real32 func_progress_set_frame);

void guictx_append_progress_manager(Progress, Panel)(
        GuiCtx *context,
        Progress* function(uint32_t flags) func_progress_create,
        void function(Progress **item) func_progress_destroy,
        void function(Progress *item, real32_t value) func_progress_set_position,
        real32_t function(const Progress *item, gui_size_t value) func_progress_get_thickness,
        void function(Progress *item, Panel *ptr) func_attach_progress_to_panel,
        void function(Progress *item, Panel *ptr) func_detach_progress_from_panel,
        void function(Progress *item, bool_t value) func_progress_set_visible,
        void function(Progress *item, bool_t value) func_progress_set_enabled,
        void function(const Progress *item, real32_t *value1, real32_t *value2) func_progress_get_size,
        void function(const Progress *item, real32_t *value1, real32_t *value2) func_progress_get_origin,
        void function(Progress *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_progress_set_frame)
{
    guictx_append_progress_manager_imp(
            context,
            cast(FPtr_gctx_create)func_progress_create,
            cast(FPtr_gctx_destroy)func_progress_destroy,
            cast(FPtr_gctx_set_real32)func_progress_set_position,
            cast(FPtr_gctx_get_real32e)func_progress_get_thickness,
            cast(FPtr_gctx_set_ptr)func_attach_progress_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_progress_from_panel,
            cast(FPtr_gctx_set_bool)func_progress_set_visible,
            cast(FPtr_gctx_set_bool)func_progress_set_enabled,
            cast(FPtr_gctx_get2_real32)func_progress_get_size,
            cast(FPtr_gctx_get2_real32)func_progress_get_origin,
            cast(FPtr_gctx_set4_real32)func_progress_set_frame);
}

void guictx_append_text_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_text_create,
        FPtr_gctx_destroy func_text_destroy,
        FPtr_gctx_set_listener func_text_OnTextChange,
        FPtr_gctx_set_text func_text_insert_text,
        FPtr_gctx_set_text func_text_set_text,
        FPtr_gctx_set_ptr func_text_set_rtf,
        FPtr_gctx_set_property func_text_set_prop,
        FPtr_gctx_set_bool func_text_set_editable,
        FPtr_gctx_get_text func_text_get_text,
        FPtr_gctx_call func_text_set_need_display,
        FPtr_gctx_set_ptr func_attach_text_to_panel,
        FPtr_gctx_set_ptr func_detach_text_from_panel,
        FPtr_gctx_set_bool func_text_set_visible,
        FPtr_gctx_set_bool func_text_set_enabled,
        FPtr_gctx_get2_real32 func_text_get_size,
        FPtr_gctx_get2_real32 func_text_get_origin,
        FPtr_gctx_set4_real32 func_text_set_frame);

void guictx_append_text_manager(Text, Panel)(
        GuiCtx *context,
        Text* function(uint32_t flags) func_text_create,
        void function(Text **item) func_text_destroy,
        void function(Text *item, Listener *listener) func_text_OnTextChange,
        void function(Text *item, const char_t *text) func_text_insert_text,
        void function(Text *item, const char_t *text) func_text_set_text,
        void function(Text *item, Stream *ptr) func_text_set_rtf,
        void function(Text *item, gui_prop_t prop, const void *value) func_text_set_prop,
        void function(Text *item, bool_t value) func_text_set_editable,
        const(char_t)* function(const Text *item) func_text_get_text,
        void function(Text *item) func_text_set_need_display,
        void function(Text *item, Panel *ptr) func_attach_text_to_panel,
        void function(Text *item, Panel *ptr) func_detach_text_from_panel,
        void function(Text *item, bool_t value) func_text_set_visible,
        void function(Text *item, bool_t value) func_text_set_enabled,
        void function(const Text *item, real32_t *value1, real32_t *value2) func_text_get_size,
        void function(const Text *item, real32_t *value1, real32_t *value2) func_text_get_origin,
        void function(Text *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_text_set_frame)
{  
    guictx_append_text_manager_imp(
            context,
            cast(FPtr_gctx_create)func_text_create,
            cast(FPtr_gctx_destroy)func_text_destroy,
            cast(FPtr_gctx_set_listener)func_text_OnTextChange,
            cast(FPtr_gctx_set_text)func_text_insert_text,
            cast(FPtr_gctx_set_text)func_text_set_text,
            cast(FPtr_gctx_set_ptr)func_text_set_rtf,
            cast(FPtr_gctx_set_property)func_text_set_prop,
            cast(FPtr_gctx_set_bool)func_text_set_editable,
            cast(FPtr_gctx_get_text)func_text_get_text,
            cast(FPtr_gctx_call)func_text_set_need_display,
            cast(FPtr_gctx_set_ptr)func_attach_text_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_text_from_panel,
            cast(FPtr_gctx_set_bool)func_text_set_visible,
            cast(FPtr_gctx_set_bool)func_text_set_enabled,
            cast(FPtr_gctx_get2_real32)func_text_get_size,
            cast(FPtr_gctx_get2_real32)func_text_get_origin,
            cast(FPtr_gctx_set4_real32)func_text_set_frame);
}

void guictx_append_split_manager_imp(
        GuiCtx *gui_context,
        FPtr_gctx_create func_split_create,
        FPtr_gctx_destroy func_split_destroy,
        FPtr_gctx_set_ptr func_split_attach_control,
        FPtr_gctx_set_ptr func_split_detach_control,
        FPtr_gctx_set_listener func_split_OnDrag,
        FPtr_gctx_set4_real32 func_split_track_area,
        FPtr_gctx_set_ptr func_attach_split_to_panel,
        FPtr_gctx_set_ptr func_detach_split_from_panel,
        FPtr_gctx_set_bool func_split_set_visible,
        FPtr_gctx_set_bool func_split_set_enabled,
        FPtr_gctx_get2_real32 func_split_get_size,
        FPtr_gctx_get2_real32 func_split_get_origin,
        FPtr_gctx_set4_real32 func_split_set_frame);

void guictx_append_split_manager(Splitv, Panel)(
        GuiCtx* gui_context,
        Splitv* function(uint32_t flags) func_split_create,
        void function(Splitv **item) func_split_destroy,
        void function(Splitv *item, OSControl *ptr) func_split_attach_control,
        void function(Splitv *item, OSControl *ptr) func_split_detach_control,
        void function(Splitv *item, Listener *listener) func_split_OnDrag,
        void function(Splitv *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_split_track_area,
        void function(Splitv *item, Panel *ptr) func_attach_split_to_panel,
        void function(Splitv *item, Panel *ptr) func_detach_split_from_panel,
        void function(Splitv *item, bool_t value) func_split_set_visible,
        void function(Splitv *item, bool_t value) func_split_set_enabled,
        void function(const Splitv *item, real32_t *value1, real32_t *value2) func_split_get_size,
        void function(const Splitv *item, real32_t *value1, real32_t *value2) func_split_get_origin,
        void function(Splitv *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_split_set_frame)
{
    guictx_append_split_manager_imp(
            gui_context,
            cast(FPtr_gctx_create)func_split_create,
            cast(FPtr_gctx_destroy)func_split_destroy,
            cast(FPtr_gctx_set_ptr)func_split_attach_control,
            cast(FPtr_gctx_set_ptr)func_split_detach_control,
            cast(FPtr_gctx_set_listener)func_split_OnDrag,
            cast(FPtr_gctx_set4_real32)func_split_track_area,
            cast(FPtr_gctx_set_ptr)func_attach_split_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_split_from_panel,
            cast(FPtr_gctx_set_bool)func_split_set_visible,
            cast(FPtr_gctx_set_bool)func_split_set_enabled,
            cast(FPtr_gctx_get2_real32)func_split_get_size,
            cast(FPtr_gctx_get2_real32)func_split_get_origin,
            cast(FPtr_gctx_set4_real32)func_split_set_frame);
}

void guictx_append_view_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_view_create,
        FPtr_gctx_destroy func_view_destroy,
        FPtr_gctx_set_listener func_view_OnDraw,
        FPtr_gctx_set_listener func_view_OnOverlay,
        FPtr_gctx_set_listener func_view_OnEnter,
        FPtr_gctx_set_listener func_view_OnExit,
        FPtr_gctx_set_listener func_view_OnMoved,
        FPtr_gctx_set_listener func_view_OnDown,
        FPtr_gctx_set_listener func_view_OnUp,
        FPtr_gctx_set_listener func_view_OnClick,
        FPtr_gctx_set_listener func_view_OnDrag,
        FPtr_gctx_set_listener func_view_OnWheel,
        FPtr_gctx_set_listener func_view_OnKeyDown,
        FPtr_gctx_set_listener func_view_OnKeyUp,
        FPtr_gctx_set_listener func_view_OnFocus,
        FPtr_gctx_set_listener func_view_OnNotify,
        FPtr_gctx_set_listener func_view_OnTouchTap,
        FPtr_gctx_set_listener func_view_OnTouchStartDrag,
        FPtr_gctx_set_listener func_view_OnTouchDragging,
        FPtr_gctx_set_listener func_view_OnTouchEndDrag,
        FPtr_gctx_set_listener func_view_OnTouchStartPinch,
        FPtr_gctx_set_listener func_view_OnTouchPinching,
        FPtr_gctx_set_listener func_view_OnTouchEndPinch,
        FPtr_gctx_set2_real32 func_view_scroll,
        FPtr_gctx_get2_real32 func_view_scroll_get,
        FPtr_gctx_get2_real32 func_view_scroller_size,
        FPtr_gctx_set4_real32 func_view_content_size,
        FPtr_gctx_get_real32 func_view_scale_factor,
        FPtr_gctx_call func_view_set_need_display,
        FPtr_gctx_set_bool func_view_set_drawable,
        FPtr_gctx_get_ptr func_view_get_native_view,
        FPtr_gctx_set_ptr func_attach_view_to_panel,
        FPtr_gctx_set_ptr func_detach_view_from_panel,
        FPtr_gctx_set_bool func_view_set_visible,
        FPtr_gctx_set_bool func_view_set_enabled,
        FPtr_gctx_get2_real32 func_view_get_size,
        FPtr_gctx_get2_real32 func_view_get_origin,
        FPtr_gctx_set4_real32 func_view_set_frame);

void guictx_append_view_manager(View, Panel)(
        GuiCtx *context,
        View* function(uint32_t flags) func_view_create,
        void function(View **item) func_view_destroy,
        void function(View *item, Listener *listener) func_view_OnDraw,
        void function(View *item, Listener *listener) func_view_OnOverlay,
        void function(View *item, Listener *listener) func_view_OnEnter,
        void function(View *item, Listener *listener) func_view_OnExit,
        void function(View *item, Listener *listener) func_view_OnMoved,
        void function(View *item, Listener *listener) func_view_OnDown,
        void function(View *item, Listener *listener) func_view_OnUp,
        void function(View *item, Listener *listener) func_view_OnClick,
        void function(View *item, Listener *listener) func_view_OnDrag,
        void function(View *item, Listener *listener) func_view_OnWheel,
        void function(View *item, Listener *listener) func_view_OnKeyDown,
        void function(View *item, Listener *listener) func_view_OnKeyUp,
        void function(View *item, Listener *listener) func_view_OnFocus,
        void function(View *item, Listener *listener) func_view_OnNotify,
        void function(View *item, Listener *listener) func_view_OnTouchTap,
        void function(View *item, Listener *listener) func_view_OnTouchStartDrag,
        void function(View *item, Listener *listener) func_view_OnTouchDragging,
        void function(View *item, Listener *listener) func_view_OnTouchEndDrag,
        void function(View *item, Listener *listener) func_view_OnTouchStartPinch,
        void function(View *item, Listener *listener) func_view_OnTouchPinching,
        void function(View *item, Listener *listener) func_view_OnTouchEndPinch,
        void function(View *item, real32_t value1, real32_t value2) func_view_scroll,
        void function(const View *item, real32_t *value1, real32_t *value2) func_view_scroll_get,
        void function(const View *item, real32_t *value1, real32_t *value2) func_view_scroller_size,
        void function(View *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_view_content_size,
        real32_t function(const View *item) func_view_scale_factor,
        void function(View *item) func_view_set_need_display,
        void function(View *item, bool_t value) func_view_set_drawable,
        void* function(const View *item) func_view_get_native_view,
        void function(View *item, Panel *ptr) func_attach_view_to_panel,
        void function(View *item, Panel *ptr) func_detach_view_from_panel,
        void function(View *item, bool_t value) func_view_set_visible,
        void function(View *item, bool_t value) func_view_set_enabled,
        void function(const View *item, real32_t *value1, real32_t *value2) func_view_get_size,
        void function(const View *item, real32_t *value1, real32_t *value2) func_view_get_origin,
        void function(View *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_view_set_frame)
{
    guictx_append_view_manager_imp(
            context,
            cast(FPtr_gctx_create)func_view_create,
            cast(FPtr_gctx_destroy)func_view_destroy,
            cast(FPtr_gctx_set_listener)func_view_OnDraw,
            cast(FPtr_gctx_set_listener)func_view_OnOverlay,
            cast(FPtr_gctx_set_listener)func_view_OnEnter,
            cast(FPtr_gctx_set_listener)func_view_OnExit,
            cast(FPtr_gctx_set_listener)func_view_OnMoved,
            cast(FPtr_gctx_set_listener)func_view_OnDown,
            cast(FPtr_gctx_set_listener)func_view_OnUp,
            cast(FPtr_gctx_set_listener)func_view_OnClick,
            cast(FPtr_gctx_set_listener)func_view_OnDrag,
            cast(FPtr_gctx_set_listener)func_view_OnWheel,
            cast(FPtr_gctx_set_listener)func_view_OnKeyDown,
            cast(FPtr_gctx_set_listener)func_view_OnKeyUp,
            cast(FPtr_gctx_set_listener)func_view_OnFocus,
            cast(FPtr_gctx_set_listener)func_view_OnNotify,
            cast(FPtr_gctx_set_listener)func_view_OnTouchTap,
            cast(FPtr_gctx_set_listener)func_view_OnTouchStartDrag,
            cast(FPtr_gctx_set_listener)func_view_OnTouchDragging,
            cast(FPtr_gctx_set_listener)func_view_OnTouchEndDrag,
            cast(FPtr_gctx_set_listener)func_view_OnTouchStartPinch,
            cast(FPtr_gctx_set_listener)func_view_OnTouchPinching,
            cast(FPtr_gctx_set_listener)func_view_OnTouchEndPinch,
            cast(FPtr_gctx_set2_real32)func_view_scroll,
            cast(FPtr_gctx_get2_real32)func_view_scroll_get,
            cast(FPtr_gctx_get2_real32)func_view_scroller_size,
            cast(FPtr_gctx_set4_real32)func_view_content_size,
            cast(FPtr_gctx_get_real32)func_view_scale_factor,
            cast(FPtr_gctx_call)func_view_set_need_display,
            cast(FPtr_gctx_set_bool)func_view_set_drawable,
            cast(FPtr_gctx_get_ptr)func_view_get_native_view,
            cast(FPtr_gctx_set_ptr)func_attach_view_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_view_from_panel,
            cast(FPtr_gctx_set_bool)func_view_set_visible,
            cast(FPtr_gctx_set_bool)func_view_set_enabled,
            cast(FPtr_gctx_get2_real32)func_view_get_size,
            cast(FPtr_gctx_get2_real32)func_view_get_origin,
            cast(FPtr_gctx_set4_real32)func_view_set_frame);
}

void guictx_append_panel_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_panel_create,
        FPtr_gctx_destroy func_panel_destroy,
        FPtr_gctx_set_area func_panel_area,
        FPtr_gctx_get2_real32 func_panel_scroller_size,
        FPtr_gctx_set4_real32 func_panel_content_size,
        FPtr_gctx_call func_panel_set_need_display,
        FPtr_gctx_set_ptr func_attach_panel_to_panel,
        FPtr_gctx_set_ptr func_detach_panel_from_panel,
        FPtr_gctx_set_bool func_panel_set_visible,
        FPtr_gctx_set_bool func_panel_set_enabled,
        FPtr_gctx_get2_real32 func_panel_get_size,
        FPtr_gctx_get2_real32 func_panel_get_origin,
        FPtr_gctx_set4_real32 func_panel_set_frame);

void guictx_append_panel_manager(Panel)(
        GuiCtx *context,
        Panel* function(uint32_t flags) func_panel_create,
        void function(Panel **item) func_panel_destroy,
        void function(void *item, void *obj, color_t bgcolor, color_t skcolor, 
                real32_t x, real32_t y, real32_t width, real32_t height) func_panel_area,
        void function(const Panel *item, real32_t *value1, real32_t *value2) func_panel_scroller_size,
        void function(Panel *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_panel_content_size,
        void function(Panel *item) func_panel_set_need_display,
        void function(Panel *item, Panel *ptr) func_attach_panel_to_panel,
        void function(Panel *item, Panel *ptr) func_detach_panel_from_panel,
        void function(Panel *item, bool_t value) func_panel_set_visible,
        void function(Panel *item, bool_t value) func_panel_set_enabled,
        void function(const Panel *item, real32_t *value1, real32_t *value2) func_panel_get_size,
        void function(const Panel *item, real32_t *value1, real32_t *value2) func_panel_get_origin,
        void function(Panel *item, real32_t value1, real32_t value2,
                real32_t value3, real32_t value4) func_panel_set_frame)
{
    guictx_append_panel_manager_imp(
            context,
            cast(FPtr_gctx_create)func_panel_create,
            cast(FPtr_gctx_destroy)func_panel_destroy,
            cast(FPtr_gctx_set_area)func_panel_area,
            cast(FPtr_gctx_get2_real32)func_panel_scroller_size,
            cast(FPtr_gctx_set4_real32)func_panel_content_size,
            cast(FPtr_gctx_call)func_panel_set_need_display,
            cast(FPtr_gctx_set_ptr)func_attach_panel_to_panel,
            cast(FPtr_gctx_set_ptr)func_detach_panel_from_panel,
            cast(FPtr_gctx_set_bool)func_panel_set_visible,
            cast(FPtr_gctx_set_bool)func_panel_set_enabled,
            cast(FPtr_gctx_get2_real32)func_panel_get_size,
            cast(FPtr_gctx_get2_real32)func_panel_get_origin,
            cast(FPtr_gctx_set4_real32)func_panel_set_frame);
}

void guictx_append_window_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_window_create,
        FPtr_gctx_create2 func_window_managed,
        FPtr_gctx_destroy func_window_destroy,
        FPtr_gctx_set_listener func_window_OnMoved,
        FPtr_gctx_set_listener func_window_OnResize,
        FPtr_gctx_set_listener func_window_OnClose,
        FPtr_gctx_set_text func_window_set_title,
        FPtr_gctx_set_bool func_window_set_edited,
        FPtr_gctx_set_bool func_window_set_movable,
        FPtr_gctx_set_ptr func_window_set_z_order,
        FPtr_gctx_set_real32 func_window_set_alpha,
        FPtr_gctx_set_bool func_window_enable_mouse_events,
        FPtr_gctx_set_hotkey func_window_hotkey,
        FPtr_gctx_set_ptr func_window_set_taborder,
        FPtr_gctx_set_ptr func_window_set_focus,
        FPtr_gctx_set_ptr func_attach_main_panel_to_window,
        FPtr_gctx_set_ptr func_detach_main_panel_from_window,
        FPtr_gctx_set_ptr func_attach_window_to_window,
        FPtr_gctx_set_ptr func_detach_window_from_window,
        FPtr_gctx_set_ptr func_window_launch,
        FPtr_gctx_set_ptr func_window_hide,
        FPtr_gctx_set_ptr2 func_window_launch_modal,
        FPtr_gctx_set_uint32 func_window_stop_modal,
        FPtr_gctx_get2_real32 func_window_get_origin_in_screen_coordinates,
        FPtr_gctx_set2_real32 func_window_set_origin_in_screen_coordinates,
        FPtr_gctx_get2_real32 func_window_get_size,
        FPtr_gctx_set2_real32 func_window_set_size,
        FPtr_gctx_set_ptr func_window_set_default_pushbutton,
        FPtr_gctx_set_ptr func_window_set_cursor,
        FPtr_gctx_set_property func_window_set_property);

void guictx_append_window_manager(Window, Panel, Button)(
        GuiCtx *context,
        Window* function(uint32_t flags) func_window_create,
        Window* function(void*) func_window_managed,
        void function(Window **item) func_window_destroy,
        void function(Window *item, Listener *listener) func_window_OnMoved,
        void function(Window *item, Listener *listener) func_window_OnResize,
        void function(Window *item, Listener *listener) func_window_OnClose,
        void function(Window *item, const char_t *text) func_window_set_title,
        void function(Window *item, bool_t value) func_window_set_edited,
        void function(Window *item, bool_t value) func_window_set_movable,
        void function(Window *item, Window *ptr) func_window_set_z_order,
        void function(Window *item, real32_t value) func_window_set_alpha,
        void function(Window *item, bool_t value) func_window_enable_mouse_events,
        void function(Window *item, vkey_t, uint32_t, Listener*) func_window_hotkey,
        void function(Window *item, OSControl *ptr) func_window_set_taborder,
        void function(Window *item, OSControl *ptr) func_window_set_focus,
        void function(Window *item, Panel *ptr) func_attach_main_panel_to_window,
        void function(Window *item, Panel *ptr) func_detach_main_panel_from_window,
        void function(Window *item, Window *ptr) func_attach_window_to_window,
        void function(Window *item, Window *ptr) func_detach_window_from_window,
        void function(Window *item, Window *ptr) func_window_launch,
        void function(Window *item, Window *ptr) func_window_hide,
        uint32_t function(Window *item, Window *ptr) func_window_launch_modal,
        void function(Window *item, real32_t value) func_window_stop_modal,
        void function(const Window *item, real32_t *value1, real32_t *value2) func_window_get_origin_in_screen_coordinates,
        void function(Window *item, real32_t value1, real32_t value2) func_window_set_origin_in_screen_coordinates,
        void function(const Window *item, real32_t *value1, real32_t *value2) func_window_get_size,
        void function(Window *item, real32_t value1, real32_t value2) func_window_set_size,
        void function(Window *item, Button *ptr) func_window_set_default_pushbutton,
        void function(Window *item, Cursor *ptr) func_window_set_cursor,
        void function(Window *item, gui_prop_t prop, const void *value) func_window_set_property)
{
    guictx_append_window_manager_imp(
            context,
            cast(FPtr_gctx_create)func_window_create,
            cast(FPtr_gctx_create2)func_window_managed,
            cast(FPtr_gctx_destroy)func_window_destroy,
            cast(FPtr_gctx_set_listener)func_window_OnMoved,
            cast(FPtr_gctx_set_listener)func_window_OnResize,
            cast(FPtr_gctx_set_listener)func_window_OnClose,
            cast(FPtr_gctx_set_text)func_window_set_title,
            cast(FPtr_gctx_set_bool)func_window_set_edited,
            cast(FPtr_gctx_set_bool)func_window_set_movable,
            cast(FPtr_gctx_set_ptr)func_window_set_z_order,
            cast(FPtr_gctx_set_real32)func_window_set_alpha,
            cast(FPtr_gctx_set_bool)func_window_enable_mouse_events,
            cast(FPtr_gctx_set_hotkey)func_window_hotkey,
            cast(FPtr_gctx_set_ptr)func_window_set_taborder,
            cast(FPtr_gctx_set_ptr)func_window_set_focus,
            cast(FPtr_gctx_set_ptr)func_attach_main_panel_to_window,
            cast(FPtr_gctx_set_ptr)func_detach_main_panel_from_window,
            cast(FPtr_gctx_set_ptr)func_attach_window_to_window,
            cast(FPtr_gctx_set_ptr)func_detach_window_from_window,
            cast(FPtr_gctx_set_ptr)func_window_launch,
            cast(FPtr_gctx_set_ptr)func_window_hide,
            cast(FPtr_gctx_set_ptr2)func_window_launch_modal,
            cast(FPtr_gctx_set_uint32)func_window_stop_modal,
            cast(FPtr_gctx_get2_real32)func_window_get_origin_in_screen_coordinates,
            cast(FPtr_gctx_set2_real32)func_window_set_origin_in_screen_coordinates,
            cast(FPtr_gctx_get2_real32)func_window_get_size,
            cast(FPtr_gctx_set2_real32)func_window_set_size,
            cast(FPtr_gctx_set_ptr)func_window_set_default_pushbutton,
            cast(FPtr_gctx_set_ptr)func_window_set_cursor,
            cast(FPtr_gctx_set_property)func_window_set_property);
}

void guictx_append_menu_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_menu_create,
        FPtr_gctx_destroy func_menu_destroy,
        FPtr_gctx_set_ptr func_attach_menuitem_to_menu,
        FPtr_gctx_set_ptr func_detach_menuitem_from_menu,
        FPtr_gctx_menu func_menu_launch_popup,
        FPtr_gctx_call func_menu_hide_popup);

void guictx_append_menu_manager(Menu, MenuItem, Window)(
        GuiCtx *context,
        Menu* function(uint32_t flags) func_menu_create,
        void function(Menu **item) func_menu_destroy,
        void function(Menu *item, MenuItem *ptr) func_attach_menuitem_to_menu,
        void function(Menu *item, MenuItem *ptr) func_detach_menuitem_from_menu,
        void function(Menu *item, Window *window, real32_t x, real32_t y) func_menu_launch_popup,
        void function(Menu *item) func_menu_hide_popup)
{
    guictx_append_menu_manager_imp(
            context,
            cast(FPtr_gctx_create)func_menu_create,
            cast(FPtr_gctx_destroy)func_menu_destroy,
            cast(FPtr_gctx_set_ptr)func_attach_menuitem_to_menu,
            cast(FPtr_gctx_set_ptr)func_detach_menuitem_from_menu,
            cast(FPtr_gctx_menu)func_menu_launch_popup,
            cast(FPtr_gctx_call)func_menu_hide_popup);
}

void guictx_append_menuitem_manager_imp(
        GuiCtx *context,
        FPtr_gctx_create func_menuitem_create,
        FPtr_gctx_destroy func_menuitem_destroy,
        FPtr_gctx_set_listener func_menuitem_OnClick,
        FPtr_gctx_set_bool func_menuitem_set_enabled,
        FPtr_gctx_set_bool func_menuitem_set_visible,
        FPtr_gctx_set_text func_menuitem_set_text,
        FPtr_gctx_set_cptr func_menuitem_set_image,
        FPtr_gctx_set_key func_menuitem_set_key_equivalent,
        FPtr_gctx_set_enum func_menuitem_set_state,
        FPtr_gctx_set_ptr func_attach_menu_to_menu_item,
        FPtr_gctx_set_ptr func_detach_menu_from_menu_item);

void guictx_append_menuitem_manager(MenuItem, Menu, Image)(
        GuiCtx *context,
        MenuItem* function(uint32_t flags) func_menuitem_create,
        void function(MenuItem **item) func_menuitem_destroy,
        void function(MenuItem *item, Listener *listener) func_menuitem_OnClick,
        void function(MenuItem *item, bool_t value) func_menuitem_set_enabled,
        void function(MenuItem *item, bool_t value) func_menuitem_set_visible,
        void function(MenuItem *item, const char_t *text) func_menuitem_set_text,
        void function(MenuItem *item, const Image *ptr) func_menuitem_set_image,
        void function(MenuItem *item, uint32_t key, uint32_t modifiers) func_menuitem_set_key_equivalent,
        void function(MenuItem *item, gui_state_t value) func_menuitem_set_state,
        void function(MenuItem *item, Menu *ptr) func_attach_menu_to_menu_item,
        void function(MenuItem *item, Menu *ptr) func_detach_menu_from_menu_item)
{
    guictx_append_menuitem_manager_imp(
            context,
            cast(FPtr_gctx_create)func_menuitem_create,
            cast(FPtr_gctx_destroy)func_menuitem_destroy,
            cast(FPtr_gctx_set_listener)func_menuitem_OnClick,
            cast(FPtr_gctx_set_bool)func_menuitem_set_enabled,
            cast(FPtr_gctx_set_bool)func_menuitem_set_visible,
            cast(FPtr_gctx_set_text)func_menuitem_set_text,
            cast(FPtr_gctx_set_cptr)func_menuitem_set_image,
            cast(FPtr_gctx_set_key)func_menuitem_set_key_equivalent,
            cast(FPtr_gctx_set_enum)func_menuitem_set_state,
            cast(FPtr_gctx_set_ptr)func_attach_menu_to_menu_item,
            cast(FPtr_gctx_set_ptr)func_detach_menu_from_menu_item);
}

void guictx_append_comwin_manager_imp(
        GuiCtx *context,
        FPtr_gctx_win_file func_comwin_file,
        FPtr_gctx_win_color func_comwin_color);

void guictx_append_comwin_manager(Window)(
        GuiCtx *context,
        const(char_t)* function(Window *parent, const char_t **ftypes, 
                uint32_t size, const char_t *start_dir, bool_t open) func_comwin_file,
        void function(Window *parent, const char_t *title, 
                real32_t x, real32_t y, align_t halign, align_t valign, color_t current, 
                color_t *colors, uint32_t n, Listener *OnChange) func_comwin_color)
{
    guictx_append_comwin_manager_imp(
            context,
            cast(FPtr_gctx_win_file)func_comwin_file,
            cast(FPtr_gctx_win_color)func_comwin_color);
}
void guictx_append_globals_manager_imp(
        GuiCtx *context,
        FPtr_gctx_get_enum func_globals_device,
        FPtr_gctx_get_enum func_globals_color,
        FPtr_gctx_get2_real32 func_globals_resolution,
        FPtr_gctx_get2_real32 func_globals_mouse_position,
        FPtr_gctx_cursor func_globals_cursor,
        FPtr_gctx_destroy func_globals_cursor_destroy,
        FPtr_gctx_get_indexed func_globals_value);

void guictx_append_globals_manager(Image, CursorEnum)(
        GuiCtx *context,
        device_t function(const void *item) func_globals_device,
        color_t function(const syscolor_t *item) func_globals_color,
        void function(const void *item, real32_t *value1, real32_t *value2) func_globals_resolution,
        void function(const void *item, real32_t *value1, real32_t *value2) func_globals_mouse_position,
        Cursor* function(CursorEnum, const Image*, real32_t, real32_t) func_globals_cursor,
        void function(Cursor **item) func_globals_cursor_destroy,
        void function(const uint32_t, void*) func_globals_value)
if (is(CursorEnum == enum) && is(CursorEnum : int))
{
    guictx_append_globals_manager_imp(
            context,
            cast(FPtr_gctx_get_enum)func_globals_device,
            cast(FPtr_gctx_get_enum)func_globals_color,
            cast(FPtr_gctx_get2_real32)func_globals_resolution,
            cast(FPtr_gctx_get2_real32)func_globals_mouse_position,
            cast(FPtr_gctx_cursor)func_globals_cursor,
            cast(FPtr_gctx_destroy)func_globals_cursor_destroy,
            cast(FPtr_gctx_get_indexed)func_globals_value);
}

void guictx_append_drawctrl_manager_imp(
        GuiCtx *context,
        FPtr_gctx_get_ptr func_drawctrl_font,
        FPtr_gctx_get_uint32 func_drawctrl_row_padding,
        FPtr_gctx_get_uint32 func_drawctrl_check_width,
        FPtr_gctx_get_uint32 func_drawctrl_check_height,
        FPtr_gctx_get_enum2 func_drawctrl_multisel,
        FPtr_gctx_draw_rect func_drawctrl_clear,
        FPtr_gctx_draw_rect func_drawctrl_header,
        FPtr_gctx_draw_rect func_drawctrl_indicator,
        FPtr_gctx_draw_rect func_drawctrl_fill,
        FPtr_gctx_draw_rect func_drawctrl_focus,
        FPtr_gctx_draw_line func_drawctrl_line,
        FPtr_gctx_draw_text func_drawctrl_text,
        FPtr_gctx_draw_image func_drawctrl_image,
        FPtr_gctx_draw_rect func_drawctrl_checkbox,
        FPtr_gctx_draw_rect func_drawctrl_uncheckbox);

void guictx_append_drawctrl_manager(Context)(
        GuiCtx *context,
        Font* function(const Context *item) func_drawctrl_font,
        uint32_t function(const Context *item) func_drawctrl_row_padding,
        uint32_t function(const Context *item) func_drawctrl_check_width,
        uint32_t function(const Context *item) func_drawctrl_check_height,
        ctrl_msel_t function(const Context *item, vkey_t) func_drawctrl_multisel,
        void function(Context*, int32_t, int32_t, uint32_t, uint32_t, enum_t) func_drawctrl_clear,
        void function(Context*, int32_t, int32_t, uint32_t, uint32_t, ctrl_state_t) func_drawctrl_header,
        void function(Context*, int32_t, int32_t, uint32_t, uint32_t, indicator_t) func_drawctrl_indicator,
        void function(Context*, int32_t, int32_t, uint32_t, uint32_t, ctrl_state_t) func_drawctrl_fill,
        void function(Context*, int32_t, int32_t, uint32_t, uint32_t, ctrl_state_t) func_drawctrl_focus,
        void function(Context*, const int32_t, const int32_t, const int32_t, const int32_t) func_drawctrl_line,
        void function(Context*, const char_t*, const int32_t, const int32_t, const ctrl_state_t) func_drawctrl_text,
        void function(Context*, const Image*, const int32_t, const int32_t, const ctrl_state_t) func_drawctrl_image,
        void function(Context*, int32_t, int32_t, uint32_t, uint32_t, ctrl_state_t) func_drawctrl_checkbox,
        void function(Context*, int32_t, int32_t, uint32_t, uint32_t, ctrl_state_t) func_drawctrl_uncheckbox)
{
        
    guictx_append_drawctrl_manager_imp(
            context,
            cast(FPtr_gctx_get_ptr)func_drawctrl_font,
            cast(FPtr_gctx_get_uint32)func_drawctrl_row_padding,
            cast(FPtr_gctx_get_uint32)func_drawctrl_check_width,
            cast(FPtr_gctx_get_uint32)func_drawctrl_check_height,
            cast(FPtr_gctx_get_enum2)func_drawctrl_multisel,
            cast(FPtr_gctx_draw_rect)func_drawctrl_clear,
            cast(FPtr_gctx_draw_rect)func_drawctrl_header,
            cast(FPtr_gctx_draw_rect)func_drawctrl_indicator,
            cast(FPtr_gctx_draw_rect)func_drawctrl_fill,
            cast(FPtr_gctx_draw_rect)func_drawctrl_focus,
            cast(FPtr_gctx_draw_line)func_drawctrl_line,
            cast(FPtr_gctx_draw_text)func_drawctrl_text,
            cast(FPtr_gctx_draw_image)func_drawctrl_image,
            cast(FPtr_gctx_draw_rect)func_drawctrl_checkbox,
            cast(FPtr_gctx_draw_rect)func_drawctrl_uncheckbox);
}